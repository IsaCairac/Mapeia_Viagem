from flask import Flask, jsonify, request
from flask_cors import CORS
import google.generativeai as gemini

app = Flask(__name__)

CORS(app)

gemini.configure(api_key="Insira aqui sua chave API")

model = gemini.GenerativeModel('gemini-1.5-flash')

@app.route('/receita', methods=['POST'])
def make_receita():
    try:
        dados = request.json
        ingredientes = dados.get('ingredientes')
        prompt = f"""
        Crie um guia tur√≠stico para o seguinte destino: {ingredientes}.
        Apresente o guia no formato html com codifica√ß√£o UTF-8, com o t√≠tulo em h1, subt√≠tulos em h2, um √≠cone como esse üìåüó∫ acompanhada do endere√ßo do local como o nome da rua por exemplo, um √≠cone üí∏acompanhado do custo m√©dio do local dentro de cada ponto tur√≠stico, um pequeno texto com a descri√ß√£o do local.
        Exiba uma mensagem contendo "Este lugar n√£o existe" se a localiza√ß√£o n√£o existir no mundo real ou for fict√≠cia como Wakanda por exemplo. 
        Fa√ßa uma borda em volta de cada pontos tur√≠sticos apenas em volta das informa√ß√µes.
        N√£o escrever a palavra html no resultado.
        N√£o exibir nunca observa√ß√µes sobre o prompt no resultado.
        N√£o invente pontos tur√≠sticos que n√£o existem.
        Quando for um objeto ou alimento exiba uma mensagem contendo "Insira um destino!"
        Quando n√£o for identificado um destino exiba a mensagem "Insira um destino!"
        N√£o exibir um prompt quando n√£o for uma cidade ou pa√≠s exiba "Insira um pa√≠s ou cidade!".
        """

        resposta = model.generate_content(prompt)
        print(resposta)

        # Extrai a receita do texto da resposta
        receita = resposta.text.strip().split('\n')

        return (receita), 200

    except Exception as e:
        return jsonify({"Erro": str(e)}), 300

if __name__ == '__main__':
    app.run(debug=True)

